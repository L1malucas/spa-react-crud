{"version":3,"file":"static/js/348.d2edcc8a.chunk.js","mappings":"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","sources":["components/Employee/row.jsx","components/Employee/delete.jsx","components/Employee/list.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nconst EmployeeRow = ({ index, employee, onDelete, onEdit }) => {\r\n  return (\r\n    <tr>\r\n      <td>{index}</td>\r\n      <td>{employee.firstName}</td>\r\n      <td>{employee.lastName}</td>\r\n      <td>{employee.email}</td>\r\n      <td>R${employee.salary.toLocaleString()}</td>\r\n      <td>{employee.date}</td>\r\n      <td>\r\n        <button onClick={() => onEdit(employee)}>Editar</button>\r\n        <button onClick={() => onDelete(employee)}>Deletar</button>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default EmployeeRow;\r\n","import React from \"react\";\r\nimport \"./styles.css\";\r\n\r\nconst DeleteEmployee = ({ employee, onConfirm, onCancel }) => {\r\n  return (\r\n    <div className=\"modal\">\r\n      <div className=\"modal-content\">\r\n        <h4>Confirmar Exclusão</h4>\r\n        <p>Tem certeza de que deseja excluir {employee.firstName} {employee.lastName}?</p>\r\n        <div className=\"modal-actions\">\r\n          <button onClick={onConfirm} className=\"confirm-btn\">Sim, Excluir</button>\r\n          <button onClick={onCancel} className=\"cancel-btn\">Cancelar</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeleteEmployee;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport EmployeeRow from \"./row\";\r\nimport AddEmployee from \"./add\";\r\nimport DeleteEmployee from \"./delete\";\r\nimport \"./styles.css\";\r\nimport data from \"../../mock/data.json\";\r\n\r\nconst EmployeeList = () => {\r\n  const [employees, setEmployees] = useState(data);\r\n  const [editingEmployee, setEditingEmployee] = useState(null);\r\n  const [employeeToDelete, setEmployeeToDelete] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch(\"https://api.example.com/employees\");\r\n        const data = await response.json();\r\n        setEmployees(data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data: \", error);\r\n      }\r\n    };\r\n\r\n    fetchData(); // Corrigido para chamar a função fetchData\r\n  }, []); // Removido a dependência de employees para evitar loop infinito\r\n\r\n  const addEmployee = (employee) => {\r\n    setEmployees([...employees, employee]);\r\n  };\r\n\r\n  const deleteEmployee = (id) => {\r\n    setEmployees(employees.filter((employee) => employee.id !== id));\r\n    setEmployeeToDelete(null);\r\n  };\r\n\r\n  const editEmployee = (updatedEmployee) => {\r\n    setEmployees(\r\n      employees.map((employee) =>\r\n        employee.id === updatedEmployee.id ? updatedEmployee : employee\r\n      )\r\n    );\r\n    setEditingEmployee(null);\r\n  };\r\n\r\n  const handleEditClick = (employee) => {\r\n    setEditingEmployee(employee);\r\n  };\r\n\r\n  const handleDeleteClick = (employee) => {\r\n    setEmployeeToDelete(employee);\r\n  };\r\n\r\n  const confirmDelete = () => {\r\n    if (employeeToDelete) {\r\n      deleteEmployee(employeeToDelete.id);\r\n    }\r\n  };\r\n\r\n  const cancelDelete = () => {\r\n    setEmployeeToDelete(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* <h2>{editingEmployee ? \"Edit Employee\" : \"Add Employee\"}</h2>\r\n      <AddEmployee\r\n        onAdd={addEmployee}\r\n        onEdit={editEmployee}\r\n        editingEmployee={editingEmployee}\r\n      /> */}\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Primeiro Nome</th>\r\n            <th>Sobrenome</th>\r\n            <th>Email</th>\r\n            <th>Salário</th>\r\n            <th>Data</th>\r\n            <th>Ações</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {employees.map((employee, index) => (\r\n            <EmployeeRow\r\n              key={employee.id}\r\n              index={index + 1}\r\n              employee={employee}\r\n              onDelete={handleDeleteClick}\r\n              onEdit={handleEditClick}\r\n            />\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      {employeeToDelete && (\r\n        <DeleteEmployee\r\n          employee={employeeToDelete}\r\n          onConfirm={confirmDelete}\r\n          onCancel={cancelDelete}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmployeeList;\r\n"],"names":["_ref","index","employee","onDelete","onEdit","_jsxs","children","_jsx","firstName","lastName","email","salary","toLocaleString","date","onClick","onConfirm","onCancel","className","EmployeeList","employees","setEmployees","useState","data","editingEmployee","setEditingEmployee","employeeToDelete","setEmployeeToDelete","useEffect","async","response","fetch","json","error","console","fetchData","handleEditClick","handleDeleteClick","map","EmployeeRow","id","DeleteEmployee","confirmDelete","filter","cancelDelete"],"sourceRoot":""}